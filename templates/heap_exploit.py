#!/usr/bin/env python3
from pwn import *

context.update(arch='amd64', os='linux', log_level='debug')

def exploit():
    p = process('./heap_vuln')
    
    # Common heap exploitation techniques
    # 1. Fast bin attack
    # 2. Unsorted bin attack
    # 3. Large bin attack
    # 4. Tcache poisoning
    # 5. House of Spirit/Force/Lore/Storm/etc
    
    def malloc(size, data):
        p.sendlineafter(b'> ', b'1')
        p.sendlineafter(b'size: ', str(size).encode())
        p.sendafter(b'data: ', data)
    
    def free(idx):
        p.sendlineafter(b'> ', b'2')
        p.sendlineafter(b'index: ', str(idx).encode())
    
    def show(idx):
        p.sendlineafter(b'> ', b'3')
        p.sendlineafter(b'index: ', str(idx).encode())
        return p.recvuntil(b'\n')
    
    # Your heap exploit here
    
    p.interactive()

if __name__ == '__main__':
    exploit()